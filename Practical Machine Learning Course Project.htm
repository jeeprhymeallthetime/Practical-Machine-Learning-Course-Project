<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 14 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
.MsoChpDefault
	{font-family:"Calibri","sans-serif";}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:612.0pt 792.0pt;
	margin:72.0pt 72.0pt 72.0pt 72.0pt;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>

<body lang=EN-CA>

<div class=WordSection1>

<p class=MsoNormal>Practical Machine Learning Course Project           </p>

<p class=MsoNormal>First, I split the training set into 2 parts, 80% going to
training and 20% to validating.  This was done using the createDataPartition
function and so this was a random division based on the “classe” variable</p>

<p class=MsoNormal>Then I trained rf models to start.  I de-selected any
columns that had NA, since many of them had 15000+ NA’s out of under 16000
entries, so rather than work out the headache of cleaning the NA’s I omitted
them.<br>
<br>
I then used a subset of the remaining columns, partially out of a mistake
because I didn’t realize how many columns were clear of NAs.  The resultant RF
model had a 82% accuracy when validated against the previously mentioned
validation subset.<br>
<br>
Next, I built a model using 53 columns that have no NAs.  This model reached
99% accuracy, which leads me to feel that there is some over-fitting going on. 
I then calculated the MeanDecreasedGini to find out which variables that the
model was most sensitive to change.  I then selected the top 10 of these to fit
another model.</p>

<p class=MsoNormal>This model also received 99% accuracy.  In an effort to
reduce possible over fitting, I deselected the lower 5 variables.</p>

<p class=MsoNormal>This model received 99% accuracy.<br>
<br>
I then became suspicious and found using only the “num_window” variable was all
that was needed to get 99% accuracy.  So I removed it and tried modeling
without it.<br>
<br>
I then used all of these models to make predictions from the official test set.<br>
<br>
So I guess sometimes things are too good to be true and a 99% accurate model is
possible.</p>

</div>

</body>

</html>
